* SGXPy: Protecting integrity of Python applications with Intel SGX
Official implementation of "SGXPy: Protecting integrity of Python applications with Intel SGX" by Denghui Zhang, Guosai Wang, Wei Xu, Kevin Gao.

Paper Link: https://ieeexplore.ieee.org/document/8945648

* Overview
Python is the programming language of choice for many data scientists, and thus widely used in cloud computing platforms. Untrusted cloud environments have imposed challenges to the security of Python applications. Intel SGX (Intel Software Guard eXtensions) provides an encrypted enclave for securing applications, and a library OS technology can be adopted to run legacy applications inside these enclaves. However, this technology has some limitations: (i) It is difficult to ensure the integrity of Python applications as a result of the complex dependencies among modules. (ii) Python applications often spawn new processes, and file access permissions need to be handled separately in the parent-child process. To address these limitations, we present SGXPy (SGX Python), an integrity preserving tool for Python applications. The design of SGXPy makes it possible to obtain dependencies of applications and assign file access permissions among processes automatically: (i) During the build stage, SGXPy constructs dependency manifests of Python applications based on the ptrace mechanism. (ii)To enhance access control among processes, SGXPy utilizes process introspection to cascading manifests for each process. With the proposed framework, sophisticated Python applications such as NumPy and a web server can now run unmodified with the library OS. We present a series of experiments to evaluate performance overheads of Python applications in SGX. Our evaluation of NumPy submodules shows SGXPy can pass 97.60% of unit testing, even with the isolated environment and limited memory of SGX.

![image](https://github.com/Aarong365/SGXPy/blob/main/SGXpy.png)

* SGXPYTHON

Running Unmodified Applications on SGX with Encrypted Data and Program

** Submodules


 - linux-sgx-driver

提取了Linux 平台下的 SGX 驱动，本项目采用了最新的sgx2分支。
 - linux-sgx

提供了Linux平台下的SGX SDK与PSW服务。

 - graphene

轻量级开源内核，提供了一个支持多进程的可信计算(SGX)平台框架。
graphene 默认安装在~/sgxpython/graphene路径下。

** sgxpy

基于graphene内核为Python脚本自动生成可信计算所需要的manifest文件（各种py依赖文件与so文件），为运行Python 脚本提供完整性支持。
    - sgxpy的主脚本为sgxpython.py。
    - pal-sgx-sign脚本对python与manifest文件进行签名
    - pal-sgx-get-token将签名文件发送到aesmd脚本生成token文件。

** Install

安装脚本位于setup目录下，请按脚本所标识的顺序依次安装。如需测试sgxpy对numpy模块的支持，请取消sgxpy/Makefile test目标中的注释，./script/nptestsuite.py 中的测试用例的执行时间为30分钟左右。


# ** TODO Todo

# 基于graphene内核与SGX的 Sealing 或 protected_fs功能为存储于本地的数据文件与可执行文件提供机密性支持，让现有程序直接享用可信计算的便利。
